/* $Id$
	
	/usr/bin/maxima -b $1

	software: http://maxima.sourceforge.net 
	manual: file:///usr/share/maxima/5.9.1/doc/html/maxima_toc.html
*/
NEXTLAYERFACTOR(TRUE)$
/* DEBUGMODE(TRUE)$ */
/* texput(tau, "\\tau")$ */

f2m(f) ::= 0.3048 * f$
/* 
 Location
*/
/*
x(t) := -(b * v[0]^2 / (4*epsilon*R*tau) )*(t^3 / 3 - t^4 / (4*tau) )$
y(t) := v[0] * ( t - t^2 / (2*tau) )$
*/
x(t) := subst(tau = v[0] / (mu * g), -(b * v[0]^2 / (4*epsilon*R*tau) )*(t^3 / 3 - t^4 / (4*tau) ))$
y(t) := subst(tau = v[0] / (mu * g), v[0] * ( t - t^2 / (2*tau) ))$
expand(x(t));
expand(y(t));
tex(factor(x(t)), "integral.tex")$ 
tex(factor(diff(x(t),t)), "integral.tex")$ 
tex(factor(diff(x(t),t,2)), "integral.tex")$ 
tex(factor(y(t)), "integral.tex")$
tex(factor(diff(y(t),t)), "integral.tex")$ 
tex(factor(diff(y(t),t,2)), "integral.tex")$ 

/* 
 Spin 
*/
omega(t) := subst(tau = v[0] / (mu * g), omega[0]*(1-t/tau)^(1/epsilon))$

assume( epsilon > 0 )$
assume( t > 0 )$
alpha(t) := integrate(omega(t), t, 0, t);
expand(alpha(t));

tex(factor(alpha(t)), "integral.tex")$
tex(factor(diff(alpha(t),t)), "integral.tex"); 
/*tex(factor(omega(t)), "integral.tex")$*/
tex(factor(diff(alpha(t),t,2)), "integral.tex")$

/* 
 Compute Ice coefficients from draw-to-tee time and curl
*/
/* "manual": 
solve(diff(y(t),t)=0,v[0]);
subst(%, y(t));
subst(t = T, %);
solve(%=D,mu);
tex(factor(%), "integral.tex")$

solve(diff(y(t),t)=0,v[0]);
subst(%, x(t));
subst(%TH(4), %);
subst(t = T, %);
solve(%=B,b);
tex(factor(%), "integral.tex")$
*/
tex([ x(T)=B, diff(x(T),T)=0, y(T)=D, diff(y(T),T)=0], "integral.tex")$
SOLVE([ x(T)=B, y(T)=D, diff(x(T),T)=0, diff(y(T),T)=0],[b, mu, v[0]]); 
tex(INPART(INPART(%TH(1),1),[1,2,3]), "integral.tex")$
INPART(INPART(INPART(%TH(2),1),1),2);
INPART(INPART(INPART(%TH(3),1),2),2);
INPART(INPART(INPART(%TH(4),1),3),2);

/*
 Compute v[0] at far hog (y=0) from time hog-to-hog
*/
tex([ y(T)=H ], "integral.tex")$
SOLVE( y(T)=H, v[0]); 
tex(%, "integral.tex")$

/*
 Compute v[1] at a given y[1] != 0 from time hog-to-hog
*/
tex([ y(t[2])=H, y(t[1])=y[1], diff(y(t[1]),t[1])=v[1] ], "integral.tex")$
/* SOLVE([ y(T)=y[1], diff(y(T),T)=v[1] ], [ v[1], v[0] ] ); */
SOLVE([ y(t[2])=H, y(t[1])=y[1], diff(y(t[1]),t[1])=v[1] ], [ v[1], t[1], v[0] ] );
tex(factor(%), "integral.tex")$



/**********************************************************

 Compute |v0| and t0 from "split-time" (far back to far hog), y2 and t2:
 
***********************************************************

y(t[0]) = BACK
y(t[1]) = HOG
y(t[2]) = END
t[1]-t[0] = SPLITTIME
*/

/* BUILDQ( [BACK] , f2m(21.0 + 72.0 + 21.0 + 12.0) );
BUILDQ( [HOG] , f2m(21.0 + 72.0) );
BACK := f2m(21.0 + 72.0 + 21.0 + 12.0)$
HOG  := f2m(21.0 + 72.0)$
*/
SOLVE([ y(t[0])=BACK, y(t[1])=HOG, y(t[2])=END, t[1]-t[0]=SPLITTIME, t[2] = 0 ], [ t[0], v[0] ] );
tex(factor(%), "integral.tex")$

SOLVE([ t[0] = 0, t[1]-t[0]=SPLITTIME ], [ t[0], t[1] ] );
tex(factor(%), "integral.tex")$

quit$
